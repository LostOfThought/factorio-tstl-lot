name: Create Release

on:
  push:
    tags:
      - "v*" # Trigger on tags like v1.0.0, v1.2.3, etc.

jobs:
  build-and-release:
    name: Build and Release
    runs-on: ubuntu-latest
    permissions:
      contents: write # Needed to create releases and upload assets
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetches all history and tags

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "23" # Or your project's Node.js version
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build the project for CI Release
        run: pnpm run package:ci

      - name: Format Changelog for GitHub Release
        run: pnpm run release:github-changelog

      - name: Prepare Release Artifacts
        id: prep_artifacts
        run: |
          # Check for the number of .zip files in the releases directory
          # We expect exactly one.
          NUM_ZIPS=$(find releases -maxdepth 1 -name "*.zip" -type f 2>/dev/null | wc -l)

          if [ "${NUM_ZIPS}" -eq 1 ]; then
            # Exactly one .zip file found, this is the expected scenario.
            SOURCE_ZIP_PATH=$(find releases -maxdepth 1 -name "*.zip" -type f -print -quit)
            ACTUAL_ARTIFACT_BASENAME=$(basename "${SOURCE_ZIP_PATH}")
            
            echo "Found unique artifact in releases/: ${SOURCE_ZIP_PATH}"
            echo "Using actual filename for artifact: ${ACTUAL_ARTIFACT_BASENAME}"
            
            # Move the found artifact to the current directory for upload
            mv "${SOURCE_ZIP_PATH}" "./${ACTUAL_ARTIFACT_BASENAME}"
            
            # Set variables for GitHub output
            ARTIFACT_PATH_FOR_OUTPUT="./${ACTUAL_ARTIFACT_BASENAME}"
            ARTIFACT_NAME_FOR_OUTPUT="${ACTUAL_ARTIFACT_BASENAME}"
            echo "Prepared artifact for upload: ${ARTIFACT_NAME_FOR_OUTPUT}"

            echo "artifact_name=${ARTIFACT_NAME_FOR_OUTPUT}" >> $GITHUB_OUTPUT
            echo "artifact_path=${ARTIFACT_PATH_FOR_OUTPUT}" >> $GITHUB_OUTPUT
          elif [ "${NUM_ZIPS}" -gt 1 ]; then
            echo "::error::Multiple .zip files found in releases/ (${NUM_ZIPS} found). Expected only one."
            exit 1
          else # NUM_ZIPS is 0
            echo "::error::No .zip artifact found in releases/. Expected one."
            exit 1
          fi

      - name: Create GitHub Release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          bodyFile: dist/changelog.md
          draft: false
          prerelease: false
          artifacts: ${{ steps.prep_artifacts.outputs.artifact_path }}
          artifactContentType: application/zip
          token: ${{ secrets.GITHUB_TOKEN }}
